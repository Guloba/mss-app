{"ast":null,"code":"import _slicedToArray from\"C:/Users/Me/OneDrive/Desktop/Project/mss-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import\"./MainChat.css\";import{Avatar,IconButton}from\"@material-ui/core\";import ChatIcon from'@material-ui/icons/Chat';import MoreVertIcon from'@material-ui/icons/MoreVert';import SearchIcon from'@material-ui/icons/Search';import{DonutLarge,InsertEmoticon}from'@material-ui/icons';import{useParams}from\"react-router-dom\";import db from\"./firebase\";import{auth}from\"./firebase\";import{useStateValue}from'./StateProvider';import firebase from\"firebase\";import{toast}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import*as timeago from'timeago.js';// setting up dialog\nimport{makeStyles}from'@material-ui/core/styles';import Button from'@material-ui/core/Button';import List from'@material-ui/core/List';import ListItem from'@material-ui/core/ListItem';import ListItemAvatar from'@material-ui/core/ListItemAvatar';import ListItemText from'@material-ui/core/ListItemText';import DialogTitle from'@material-ui/core/DialogTitle';import Dialog from'@material-ui/core/Dialog';import PersonIcon from'@material-ui/icons/Person';import AddIcon from'@material-ui/icons/Add';import Typography from'@material-ui/core/Typography';import{blue}from'@material-ui/core/colors';import InputEmoji from\"react-input-emoji\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var useStyles=makeStyles({avatar:{backgroundColor:blue[100],color:blue[600]}});function MainChat(_ref){var _messages,_messages$timestamp;var date=_ref.date;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];var _useParams=useParams(),roomId=_useParams.roomId;var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),message=_useState4[0],setMessage=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),messages=_useState6[0],setMessages=_useState6[1];var _useStateValue=useStateValue(),_useStateValue2=_slicedToArray(_useStateValue,2),user=_useStateValue2[0].user,dispatch=_useStateValue2[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),channelName=_useState8[0],setChannel=_useState8[1];//method to open dialog\nvar handleOpen=function handleOpen(){setOpen(true);};// method to close dialog\nvar handleClose=function handleClose(){setOpen(false);};//function to send message to our database\nvar sendMessage=function sendMessage(e){e.preventDefault();db.collection('Rooms').doc(roomId).collection('Messages').add({text:message,name:user.displayName,timestamp:firebase.firestore.FieldValue.serverTimestamp()});var audio=new Audio('https://drive.google.com/uc?export=download&id=1M95VOpto1cQ4FQHzNBaLf0WFQglrtWi7');audio.play();toast.success('Message Sent Successsfully',{position:toast.POSITION.TOP_RIGHT});setMessage('');};//function to fetch messages from db (React Hook)\nuseEffect(function(){if(roomId){db.collection('Rooms').doc(roomId).collection('Messages').orderBy('timestamp','asc').onSnapshot(function(snap){setMessages(snap.docs.map(function(doc){return doc.data();}));});// code to fetch details about the channel we are working with\ndb.collection('Rooms').doc(roomId).onSnapshot(function(snap){setChannel(snap.data().name);});}},[roomId]);//  function to logout of app\nvar logOut=function logOut(){auth.signOut();dispatch({type:'SET_USER',user:null});setOpen(false);};// function to clear chat messages\nvar clearMessages=function clearMessages(){if(roomId){db.collection('Rooms').doc(roomId).collection('Messages').get().then(function(querySnapshot){querySnapshot.forEach(function(doc){doc.ref.delete();});});}toast.success('Messages Cleared',{position:toast.POSITION.TOP_RIGHT});setOpen(false);};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-field\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-header\",children:[/*#__PURE__*/_jsx(Avatar,{src:\"https://avatars.dicebear.com/api/human/88.svg\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"header_info\",children:[/*#__PURE__*/_jsx(\"h3\",{children:channelName}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Last seen \\xA0\",messages.length>0?/*#__PURE__*/_jsxs(\"small\",{className:\"last-seen\",children:[new Date((_messages=messages[messages.length-1])===null||_messages===void 0?void 0:(_messages$timestamp=_messages.timestamp)===null||_messages$timestamp===void 0?void 0:_messages$timestamp.toDate()).toLocaleString(),\" \"]}):/*#__PURE__*/_jsx(\"small\",{className:\"no-lastseen\",children:\"No user visited this channel\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"message-right\",children:[/*#__PURE__*/_jsx(IconButton,{children:/*#__PURE__*/_jsx(DonutLarge,{})}),/*#__PURE__*/_jsx(IconButton,{children:/*#__PURE__*/_jsx(ChatIcon,{})}),/*#__PURE__*/_jsx(IconButton,{onClick:handleOpen,children:/*#__PURE__*/_jsx(MoreVertIcon,{})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"message-body\",children:messages.map(function(res){var _res$timestamp;return/*#__PURE__*/_jsxs(\"p\",{className:\"chat-message \".concat(res.name===user.displayName&&'message-sender'),children:[/*#__PURE__*/_jsx(\"span\",{className:\"username\",children:res.name}),/*#__PURE__*/_jsx(\"br\",{}),res.text,/*#__PURE__*/_jsxs(\"small\",{className:\"time-stamp\",children:[\" \",timeago.format(new Date(res===null||res===void 0?void 0:(_res$timestamp=res.timestamp)===null||_res$timestamp===void 0?void 0:_res$timestamp.toDate())),\" \"]})]});})}),/*#__PURE__*/_jsx(\"div\",{className:\"message-footer\",children:/*#__PURE__*/_jsxs(\"form\",{children:[/*#__PURE__*/_jsx(InputEmoji,{value:message,onChange:setMessage,placeholder:\"Type a message\"}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,type:\"submit\",children:\"Send\"})]})}),/*#__PURE__*/_jsxs(Dialog,{position:\"top, right\",className:\"dialogue\",onClose:handleClose,\"aria-labelledby\":\"simple-dialog-title\",open:open,children:[/*#__PURE__*/_jsx(DialogTitle,{id:\"simple-dialog-title\",children:\" Account Settings\"}),/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsxs(ListItem,{onClick:clearMessages,button:true,children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{children:/*#__PURE__*/_jsx(PersonIcon,{})})}),/*#__PURE__*/_jsx(ListItemText,{primary:\"Clear Chats\"})]}),/*#__PURE__*/_jsxs(ListItem,{autoFocus:true,button:true,children:[/*#__PURE__*/_jsx(ListItemAvatar,{children:/*#__PURE__*/_jsx(Avatar,{children:/*#__PURE__*/_jsx(AddIcon,{})})}),/*#__PURE__*/_jsx(ListItemText,{onClick:logOut,primary:\"Logout\"})]})]})]})]});}export default MainChat;","map":{"version":3,"sources":["C:/Users/Me/OneDrive/Desktop/Project/mss-app/src/MainChat.js"],"names":["React","useState","useEffect","Avatar","IconButton","ChatIcon","MoreVertIcon","SearchIcon","DonutLarge","InsertEmoticon","useParams","db","auth","useStateValue","firebase","toast","timeago","makeStyles","Button","List","ListItem","ListItemAvatar","ListItemText","DialogTitle","Dialog","PersonIcon","AddIcon","Typography","blue","InputEmoji","useStyles","avatar","backgroundColor","color","MainChat","date","open","setOpen","roomId","message","setMessage","messages","setMessages","user","dispatch","channelName","setChannel","handleOpen","handleClose","sendMessage","e","preventDefault","collection","doc","add","text","name","displayName","timestamp","firestore","FieldValue","serverTimestamp","audio","Audio","play","success","position","POSITION","TOP_RIGHT","orderBy","onSnapshot","snap","docs","map","data","logOut","signOut","type","clearMessages","get","then","querySnapshot","forEach","ref","delete","length","Date","toDate","toLocaleString","res","format"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport \"./MainChat.css\"\r\nimport {Avatar, IconButton} from \"@material-ui/core\"\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { DonutLarge, InsertEmoticon } from '@material-ui/icons'\r\nimport {useParams} from \"react-router-dom\"\r\nimport db from \"./firebase\"\r\nimport {auth} from \"./firebase\"\r\nimport {useStateValue} from './StateProvider'\r\nimport firebase from \"firebase\";\r\nimport {toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport * as timeago from 'timeago.js';\r\n\r\n\r\n// setting up dialog\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\nimport InputEmoji from \"react-input-emoji\";\r\n\r\nconst useStyles = makeStyles({\r\n      avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n      },\r\n    });\r\n\r\n\r\n      function MainChat({date}) {\r\n      const[open,setOpen]=useState(false);\r\n      const {roomId}=useParams()\r\n      const [message,setMessage]=useState('')\r\n      const [messages,setMessages]=useState([])\r\n      const [{user},dispatch]=useStateValue()\r\n      const [channelName, setChannel]=useState('')\r\n     \r\n   \r\n      \r\n      //method to open dialog\r\n      const handleOpen=()=>{\r\n            setOpen(true)\r\n      }\r\n      // method to close dialog\r\n      const handleClose=()=>{\r\n            setOpen(false)\r\n      }\r\n\r\n      //function to send message to our database\r\n       const sendMessage=(e)=>{\r\n            e.preventDefault()\r\n            db.collection('Rooms').doc(roomId).collection('Messages').add({\r\n                  text:message,\r\n                  name:user.displayName,\r\n                  timestamp:firebase.firestore.FieldValue.serverTimestamp()\r\n            })\r\n           \r\n           const audio = new Audio('https://drive.google.com/uc?export=download&id=1M95VOpto1cQ4FQHzNBaLf0WFQglrtWi7');\r\n           audio.play();   \r\n           toast.success('Message Sent Successsfully',{position:toast.POSITION.TOP_RIGHT}) \r\n           setMessage('')\r\n       }\r\n\r\n       //function to fetch messages from db (React Hook)\r\n           useEffect(()=>{\r\n                  if(roomId){\r\n                        db.collection('Rooms').doc(roomId).collection('Messages').orderBy('timestamp','asc').onSnapshot(snap=>{\r\n                           setMessages(snap.docs.map(doc=>doc.data()))   \r\n                        })\r\n\r\n                      // code to fetch details about the channel we are working with\r\n                        db.collection('Rooms').doc(roomId).onSnapshot(snap=>{\r\n                          setChannel(snap.data().name)\r\n                        })\r\n\r\n                  }      \r\n           },[roomId])\r\n\r\n          //  function to logout of app\r\n           const logOut=()=>{\r\n             auth.signOut()\r\n             dispatch({\r\n              type:'SET_USER',\r\n              user:null\r\n             })\r\n             setOpen(false)\r\n           }\r\n\r\n           // function to clear chat messages\r\n           const clearMessages=()=>{\r\n                if(roomId){\r\n                db.collection('Rooms').doc(roomId).collection('Messages').get().then(function(querySnapshot) {\r\n                  querySnapshot.forEach(function(doc) {\r\n                      doc.ref.delete();\r\n                  });\r\n              });  \r\n             } \r\n             toast.success('Messages Cleared',{position:toast.POSITION.TOP_RIGHT})\r\n             setOpen(false)        \r\n           }\r\n\r\n  return (\r\n    <div className=\"chat-field\">\r\n        <div className=\"message-header\">\r\n        <Avatar src='https://avatars.dicebear.com/api/human/88.svg'/>\r\n          <div className=\"header_info\">\r\n          <h3>{channelName}</h3>\r\n          <p>Last seen &nbsp;\r\n            {messages.length>0 ?(\r\n              <small className=\"last-seen\">{new Date(messages[messages.length-1]?.timestamp?.toDate()).toLocaleString()} </small> \r\n            ):(\r\n               <small className=\"no-lastseen\">No user visited this channel</small>\r\n            )}   \r\n          </p>\r\n          </div>\r\n          <div className=\"message-right\">\r\n          <IconButton>\r\n            <DonutLarge/>\r\n            </IconButton>\r\n            <IconButton>\r\n            <ChatIcon/>\r\n            </IconButton>\r\n            <IconButton onClick={handleOpen}>\r\n            <MoreVertIcon/>\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div className=\"message-body\">\r\n              {messages.map((res)=>(\r\n                  <p className={`chat-message ${res.name===user.displayName && 'message-sender'}`}>\r\n                  <span className=\"username\">{res.name}</span><br/>\r\n                        {res.text}\r\n                  <small className=\"time-stamp\"> {timeago.format(new Date(res?.timestamp?.toDate()))} </small>\r\n                  </p>\r\n              ))\r\n\r\n              }\r\n                          \r\n        </div>\r\n\r\n        <div className=\"message-footer\">\r\n        \r\n            <form>\r\n\r\n            <InputEmoji\r\n            value={message}\r\n            onChange={setMessage}\r\n            placeholder=\"Type a message\"\r\n           /> \r\n            <button onClick={sendMessage} type=\"submit\">Send</button>\r\n            </form>\r\n        </div>\r\n\r\n        {/* code to render dialogue */}\r\n   <Dialog position=\"top, right\" className=\"dialogue\" onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\"> Account Settings</DialogTitle>\r\n      <List>\r\n          <ListItem  onClick={clearMessages} button >\r\n            <ListItemAvatar>\r\n              <Avatar >\r\n                <PersonIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary=\"Clear Chats\"/>\r\n          </ListItem>\r\n        <ListItem autoFocus button >\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText onClick={logOut} primary=\"Logout\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainChat"]},"metadata":{},"sourceType":"module"}