{"ast":null,"code":"import _slicedToArray from\"C:/Users/Me/OneDrive/Desktop/Project/mss-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import\"./Sidebar.css\";import{Avatar,IconButton}from\"@material-ui/core\";import{DonutLarge}from'@material-ui/icons';import ChatIcon from'@material-ui/icons/Chat';import MoreVertIcon from'@material-ui/icons/MoreVert';import SearchIcon from'@material-ui/icons/Search';import SidebarChats from'./SidebarChats';import db from'./firebase';import{auth,provider}from\"./firebase\";import{toast}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import{useStateValue}from'./StateProvider';// import SidebarChat from './SidebarChat'\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";toast.configure();function Sidebar(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),rooms=_useState2[0],setRooms=_useState2[1];var _useStateValue=useStateValue(),_useStateValue2=_slicedToArray(_useStateValue,1),user=_useStateValue2[0].user;var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),inputvalue=_useState4[0],setInput=_useState4[1];//  method to capture our message\nvar AddNewChat=function AddNewChat(){var chatname=prompt(\"Enter your message here\");if(chatname){db.collection('Rooms').add({name:chatname});var audio=new Audio('https://drive.google.com/uc?export=download&id=1M95VOpto1cQ4FQHzNBaLf0WFQglrtWi7');audio.play();toast.success('Channel Successfully Created',{position:toast.POSITION.TOP_RIGHT});}};// React hook to render our channels from db\nuseEffect(function(){var unsubscribe=db.collection('Rooms').onSnapshot(function(snap){setRooms(snap.docs.map(function(doc){return{data:doc.data(),id:doc.id};}));});return function(){unsubscribe();};},[]);//function to filter channels by names\nvar filterChannels=function filterChannels(event){event.preventDefault();var value=event.target.value.toLowerCase();var result=[];result=rooms.filter(function(res){return res.data.name.toLowerCase().search(value)!=-1;});setRooms(result);};//refresh function\nvar refresh=function refresh(){db.collection('Rooms').onSnapshot(function(snap){setRooms(snap.docs.map(function(doc){return{data:doc.data(),id:doc.id};}));});};return/*#__PURE__*/_jsxs(\"div\",{className:\"side-bar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar-header\",children:[/*#__PURE__*/_jsx(Avatar,{src:user===null||user===void 0?void 0:user.photoURL}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-right\",children:[/*#__PURE__*/_jsx(IconButton,{onClick:refresh,children:/*#__PURE__*/_jsx(DonutLarge,{})}),/*#__PURE__*/_jsx(IconButton,{children:/*#__PURE__*/_jsx(ChatIcon,{})}),/*#__PURE__*/_jsx(IconButton,{children:/*#__PURE__*/_jsx(MoreVertIcon,{})})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"sidebar-search\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"search-container\",children:[/*#__PURE__*/_jsx(SearchIcon,{}),/*#__PURE__*/_jsx(\"input\",{onChange:filterChannels,type:\"text\",placeholder:\"Search or start new chat\"})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"sidebar-chats\",children:[/*#__PURE__*/_jsx(\"div\",{onClick:AddNewChat,className:\"chat-head\",children:/*#__PURE__*/_jsx(\"h2\",{children:\"Add New Channel\"})}),rooms.map(function(res){return/*#__PURE__*/_jsx(SidebarChats,{id:res.id,channelname:res.data.name},res.id);})]})]});}export default Sidebar;","map":{"version":3,"sources":["C:/Users/Me/OneDrive/Desktop/Project/mss-app/src/Sidebar.js"],"names":["React","useEffect","useState","Avatar","IconButton","DonutLarge","ChatIcon","MoreVertIcon","SearchIcon","SidebarChats","db","auth","provider","toast","useStateValue","configure","Sidebar","rooms","setRooms","user","inputvalue","setInput","AddNewChat","chatname","prompt","collection","add","name","audio","Audio","play","success","position","POSITION","TOP_RIGHT","unsubscribe","onSnapshot","snap","docs","map","doc","data","id","filterChannels","event","preventDefault","value","target","toLowerCase","result","filter","res","search","refresh","photoURL"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react'\r\nimport \"./Sidebar.css\"\r\nimport {Avatar, IconButton} from \"@material-ui/core\"\r\nimport { DonutLarge } from '@material-ui/icons'\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport SidebarChats from './SidebarChats';\r\nimport db from './firebase'\r\nimport {auth,provider} from \"./firebase\"\r\nimport {toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useStateValue } from './StateProvider';\r\n// import SidebarChat from './SidebarChat'\r\ntoast.configure();\r\n\r\nfunction Sidebar() {\r\n   const[rooms,setRooms]=useState([])\r\n   const[{user}]=useStateValue()\r\n   const[inputvalue,setInput]=useState('')\r\n\r\n\r\n  //  method to capture our message\r\n  const  AddNewChat =()=>{\r\n    const chatname= prompt(\"Enter your message here\")\r\n    if(chatname){\r\n        db.collection('Rooms').add({\r\n          name:chatname\r\n        })\r\n    const audio = new Audio('https://drive.google.com/uc?export=download&id=1M95VOpto1cQ4FQHzNBaLf0WFQglrtWi7');\r\n    audio.play();   \r\n    toast.success('Channel Successfully Created',{position:toast.POSITION.TOP_RIGHT})   \r\n    }\r\n }\r\n      // React hook to render our channels from db\r\n        useEffect(()=>{\r\n           const unsubscribe = db.collection('Rooms').onSnapshot(snap=>{\r\n              setRooms(snap.docs.map(doc=>(\r\n                {\r\n                 data:doc.data(),\r\n                 id:doc.id \r\n                }\r\n              )))\r\n           })\r\n\r\n           return ()=>{\r\n             unsubscribe()\r\n           }\r\n          \r\n        },[])\r\n \r\n\r\n          //function to filter channels by names\r\n          const filterChannels = (event) => {\r\n            event.preventDefault()\r\n            let value = event.target.value.toLowerCase();\r\n            let result = [];\r\n            result = rooms.filter((res) => {\r\n            return res.data.name.toLowerCase().search(value) != -1;\r\n            });\r\n            setRooms(result);\r\n            }\r\n\r\n\r\n\r\n           //refresh function\r\n          const refresh=()=>{\r\n            db.collection('Rooms').onSnapshot(snap=>{\r\n              setRooms(snap.docs.map(doc=>(\r\n                {\r\n                 data:doc.data(),\r\n                 id:doc.id \r\n                }\r\n              )))\r\n           })\r\n           }\r\n\r\n  return (\r\n    <div className=\"side-bar\">\r\n           <div className=\"sidebar-header\">\r\n               <Avatar src={user?.photoURL}/>\r\n               <div className=\"header-right\">\r\n                  <IconButton onClick={refresh}>\r\n                  < DonutLarge/>\r\n                  </IconButton>\r\n                  <IconButton>\r\n                  <ChatIcon/>\r\n                  </IconButton>\r\n                  <IconButton>\r\n                  <MoreVertIcon/>\r\n                 </IconButton>\r\n            </div>\r\n           </div>\r\n\r\n        <div className=\"sidebar-search\">\r\n          <div className=\"search-container\">\r\n            <SearchIcon/>\r\n            <input  onChange={filterChannels} type=\"text\" placeholder=\"Search or start new chat\"/>\r\n          </div>   \r\n        </div>\r\n\r\n        {/* side bar chats */}\r\n        <div className=\"sidebar-chats\">\r\n            <div onClick={AddNewChat}  className=\"chat-head\">\r\n              <h2>Add New Channel</h2>\r\n            </div>\r\n            {\r\n              rooms.map(res=>(\r\n                <SidebarChats key={res.id} id={res.id} channelname={res.data.name} />\r\n              ))\r\n            }\r\n            \r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Sidebar"]},"metadata":{},"sourceType":"module"}