{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Me\\\\OneDrive\\\\Desktop\\\\Project\\\\mss-app\\\\src\\\\MainChat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"./MainChat.css\";\nimport { Avatar, IconButton } from \"@material-ui/core\";\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { DonutLarge, InsertEmoticon } from '@material-ui/icons';\nimport { useParams } from \"react-router-dom\";\nimport db from \"./firebase\";\nimport { useStateValue } from './StateProvider';\nimport firebase from \"firebase\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport * as timeago from 'timeago.js'; // setting up dialog\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport PersonIcon from '@material-ui/icons/Person';\nimport AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography';\nimport { blue } from '@material-ui/core/colors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  }\n});\n\nfunction MainChat({\n  date\n}) {\n  _s();\n\n  var _messages, _messages$timestamp;\n\n  const [open, setOpen] = useState(false);\n  const {\n    roomId\n  } = useParams();\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [{\n    user\n  }] = useStateValue();\n  const [channelName, setChannel] = useState(''); //method to open dialog\n\n  const handleOpen = () => {\n    setOpen(true);\n  }; // method to close dialog\n\n\n  const handleClose = () => {\n    setOpen(false);\n  }; //function to send message to our database\n\n\n  const sendMessage = e => {\n    e.preventDefault();\n    db.collection('Rooms').doc(roomId).collection('Messages').add({\n      text: message,\n      name: user.displayName,\n      timestamp: firebase.firestore.FieldValue.serverTimestamp()\n    });\n    const audio = new Audio('https://drive.google.com/uc?export=download&id=1M95VOpto1cQ4FQHzNBaLf0WFQglrtWi7');\n    audio.play();\n    toast.success('Message Sent Successsfully', {\n      position: toast.POSITION.TOP_RIGHT\n    });\n    setMessage('');\n  }; //function to fetch messages from db (React Hook)\n\n\n  useEffect(() => {\n    if (roomId) {\n      db.collection('Rooms').doc(roomId).collection('Messages').orderBy('timestamp', 'asc').onSnapshot(snap => {\n        setMessages(snap.docs.map(doc => doc.data()));\n      }); // code to fetch details about the channel we are working with\n\n      db.collection('Rooms').doc(roomId).onSnapshot(snap => {\n        setChannel(snap.data().name);\n      });\n    }\n  }, [roomId]); //  function to clear messages goes here\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-field\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-header\",\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        src: \"https://avatars.dicebear.com/api/human/88.svg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header_info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: channelName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Last seen \\xA0\", messages.length > 0 ? /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [new Date((_messages = messages[messages.length - 1]) === null || _messages === void 0 ? void 0 : (_messages$timestamp = _messages.timestamp) === null || _messages$timestamp === void 0 ? void 0 : _messages$timestamp.toDate()).toUTCString(), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"No last seen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-right\",\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(DonutLarge, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          children: /*#__PURE__*/_jsxDEV(ChatIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: handleOpen,\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-body\",\n      children: messages.map(res => {\n        var _res$timestamp;\n\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          className: `chat-message ${res.name === user.displayName && 'message-sender'}`,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"username\",\n            children: res.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 63\n          }, this), res.text, /*#__PURE__*/_jsxDEV(\"small\", {\n            className: \"time-stamp\",\n            children: [\" \", timeago.format(new Date(res === null || res === void 0 ? void 0 : (_res$timestamp = res.timestamp) === null || _res$timestamp === void 0 ? void 0 : _res$timestamp.toDate())), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 19\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"message-footer\",\n      children: [/*#__PURE__*/_jsxDEV(InsertEmoticon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Type a message here\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          type: \"submit\",\n          children: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      position: \"top,right\",\n      className: \"dialogue\",\n      onClose: handleClose,\n      \"aria-labelledby\": \"simple-dialog-title\",\n      open: open,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"simple-dialog-title\",\n        children: \" Account Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: /*#__PURE__*/_jsxDEV(PersonIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Clear Your Message Chats\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          autoFocus: true,\n          button: true,\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: \"Logout of your Acccount\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainChat, \"WG2lAsZZE8g6QynNhJGY+QHMCyU=\", false, function () {\n  return [useParams, useStateValue];\n});\n\n_c = MainChat;\nexport default MainChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainChat\");","map":{"version":3,"sources":["C:/Users/Me/OneDrive/Desktop/Project/mss-app/src/MainChat.js"],"names":["React","useState","useEffect","Avatar","IconButton","ChatIcon","MoreVertIcon","SearchIcon","DonutLarge","InsertEmoticon","useParams","db","useStateValue","firebase","toast","timeago","makeStyles","Button","List","ListItem","ListItemAvatar","ListItemText","DialogTitle","Dialog","PersonIcon","AddIcon","Typography","blue","useStyles","avatar","backgroundColor","color","MainChat","date","open","setOpen","roomId","message","setMessage","messages","setMessages","user","channelName","setChannel","handleOpen","handleClose","sendMessage","e","preventDefault","collection","doc","add","text","name","displayName","timestamp","firestore","FieldValue","serverTimestamp","audio","Audio","play","success","position","POSITION","TOP_RIGHT","orderBy","onSnapshot","snap","docs","map","data","length","Date","toDate","toUTCString","res","format","target","value"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport \"./MainChat.css\"\r\nimport {Avatar, IconButton} from \"@material-ui/core\"\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { DonutLarge, InsertEmoticon } from '@material-ui/icons'\r\nimport {useParams} from \"react-router-dom\"\r\nimport db from \"./firebase\"\r\nimport {useStateValue} from './StateProvider'\r\nimport firebase from \"firebase\";\r\nimport {toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport * as timeago from 'timeago.js';\r\n\r\n\r\n// setting up dialog\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { blue } from '@material-ui/core/colors';\r\n\r\nconst useStyles = makeStyles({\r\n      avatar: {\r\n        backgroundColor: blue[100],\r\n        color: blue[600],\r\n      },\r\n    });\r\n\r\n\r\n      function MainChat({date}) {\r\n      const[open,setOpen]=useState(false);\r\n      const {roomId}=useParams()\r\n      const [message,setMessage]=useState('')\r\n      const [messages,setMessages]=useState([])\r\n      const [{user}]=useStateValue()\r\n      const [channelName, setChannel]=useState('')\r\n   \r\n      \r\n      //method to open dialog\r\n      const handleOpen=()=>{\r\n            setOpen(true)\r\n      }\r\n      // method to close dialog\r\n      const handleClose=()=>{\r\n            setOpen(false)\r\n      }\r\n\r\n      //function to send message to our database\r\n       const sendMessage=(e)=>{\r\n            e.preventDefault()\r\n            db.collection('Rooms').doc(roomId).collection('Messages').add({\r\n                  text:message,\r\n                  name:user.displayName,\r\n                  timestamp:firebase.firestore.FieldValue.serverTimestamp()\r\n            })\r\n           \r\n           const audio = new Audio('https://drive.google.com/uc?export=download&id=1M95VOpto1cQ4FQHzNBaLf0WFQglrtWi7');\r\n           audio.play();   \r\n           toast.success('Message Sent Successsfully',{position:toast.POSITION.TOP_RIGHT}) \r\n           setMessage('')\r\n       }\r\n\r\n       //function to fetch messages from db (React Hook)\r\n           useEffect(()=>{\r\n                  if(roomId){\r\n                        db.collection('Rooms').doc(roomId).collection('Messages').orderBy('timestamp','asc').onSnapshot(snap=>{\r\n                           setMessages(snap.docs.map(doc=>doc.data()))   \r\n                        })\r\n\r\n                      // code to fetch details about the channel we are working with\r\n                        db.collection('Rooms').doc(roomId).onSnapshot(snap=>{\r\n                          setChannel(snap.data().name)\r\n                        })\r\n\r\n                  }      \r\n           },[roomId])\r\n\r\n          //  function to clear messages goes here\r\n\r\n  return (\r\n    <div className=\"chat-field\">\r\n        <div className=\"message-header\">\r\n        <Avatar src='https://avatars.dicebear.com/api/human/88.svg'/>\r\n          <div className=\"header_info\">\r\n          <h3>{channelName}</h3>\r\n          <p>Last seen &nbsp;\r\n            {messages.length>0 ?(\r\n              <small>{new Date(messages[messages.length-1]?.timestamp?.toDate()).toUTCString()} </small> \r\n            ):(\r\n               <small>No last seen</small>\r\n            )}   \r\n          </p>\r\n          </div>\r\n          <div className=\"message-right\">\r\n          <IconButton>\r\n            <DonutLarge/>\r\n            </IconButton>\r\n            <IconButton>\r\n            <ChatIcon/>\r\n            </IconButton>\r\n            <IconButton onClick={handleOpen}>\r\n            <MoreVertIcon/>\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div className=\"message-body\">\r\n              {messages.map((res)=>(\r\n                  <p className={`chat-message ${res.name===user.displayName && 'message-sender'}`}>\r\n                  <span className=\"username\">{res.name}</span><br/>\r\n                        {res.text}\r\n                  <small className=\"time-stamp\"> {timeago.format(new Date(res?.timestamp?.toDate()))} </small>\r\n                  </p>\r\n              ))\r\n\r\n              }\r\n                          \r\n        </div>\r\n\r\n        <div className=\"message-footer\">\r\n            <InsertEmoticon/>\r\n            <form>\r\n             <input value={message} onChange={e=>setMessage(e.target.value)} placeholder=\"Type a message here\" type=\"text\"/>   \r\n             <button onClick={sendMessage} type=\"submit\">Send Message</button>\r\n            </form>\r\n        </div>\r\n\r\n        {/* code to render dialogue */}\r\n   <Dialog position=\"top,right\" className=\"dialogue\" onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\r\n      <DialogTitle id=\"simple-dialog-title\"> Account Settings</DialogTitle>\r\n      <List>\r\n          <ListItem button >\r\n            <ListItemAvatar>\r\n              <Avatar >\r\n                <PersonIcon />\r\n              </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText primary=\"Clear Your Message Chats\"/>\r\n          </ListItem>\r\n        <ListItem autoFocus button >\r\n          <ListItemAvatar>\r\n            <Avatar>\r\n              <AddIcon />\r\n            </Avatar>\r\n          </ListItemAvatar>\r\n          <ListItemText primary=\"Logout of your Acccount\" />\r\n        </ListItem>\r\n      </List>\r\n    </Dialog>\r\n\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MainChat"]},"metadata":{},"sourceType":"module"}